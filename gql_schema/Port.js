  type Query {
    ports: [Port!]!
    port(portId: ID!): [Port]
  }

  type Port {
    portId: ID!
    deviceId: Int!
    port_descr_type: String
    port_descr_descr: String
    port_descr_circuit: String
    port_descr_speed: String
    port_descr_notes: String
    ifDescr: String
    ifName: String
    portName: String
    ifIndex: Int
    ifSpeed: Int
    ifConnectorPresent: String
    ifPromiscuousMode: String
    ifHighSpeed: Int
    ifOperStatus: String
    ifOperStatus_prev: String
    ifAdminStatus: String
    ifAdminStatus_prev: String
    ifDuplex: String
    ifMtu: Int
    ifType: String
    ifAlias: String
    ifPhysAddress: String
    ifHardType: String
    ifLastChange: Int!
    ifVlan: String!
    ifTrunk: String
    ifVrf: Int!
    counter_in: Int
    counter_out: Int
    ignore: Int!
    disabled: Int!
    detailed: Int!
    deleted: Int!
    pagpOperationMode: String
    pagpPortState: String
    pagpPartnerDeviceId: String
    pagpPartnerLearnMethod: String
    pagpPartnerIfIndex: Int
    pagpPartnerGroupIfIndex: Int
    pagpPartnerDeviceName: String
    pagpEthcOperationMode: String
    pagpDeviceId: String
    pagpGroupIfIndex: Int
    ifInUcastPkts: Int
    ifInUcastPkts_prev: Int
    ifInUcastPkts_delta: Int
    ifInUcastPkts_rate: Int
    ifOutUcastPkts: Int
    ifOutUcastPkts_prev: Int
    ifOutUcastPkts_delta: Int
    ifOutUcastPkts_rate: Int
    ifInErrors: Int
    ifInErrors_prev: Int
    ifInErrors_delta: Int
    ifInErrors_rate: Int
    ifOutErrors: Int
    ifOutErrors_prev: Int
    ifOutErrors_delta: Int
    ifOutErrors_rate: Int
    ifInOctets: Int
    ifInOctets_prev: Int
    ifInOctets_delta: Int
    ifInOctets_rate: Int
    ifOutOctets: Int
    ifOutOctets_prev: Int
    ifOutOctets_delta: Int
    ifOutOctets_rate: Int
    poll_time: Int
    poll_prev: Int
    poll_period: Int
    ipv4Address: [ipv4Address]
    ipv6Address: [ipv6Address]
    PortStatistics: [PortStatistics]
  }
